{"version":3,"sources":["shared/service/group.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAAyC;AACzC,sCAA6C;AAG7C,uDAAmD;AAGnD;IAAkC,gCAAe;IAE7C,sBAAY,IAAU;eAClB,kBAAM,IAAI,CAAC;IACf,CAAC;IAED,gCAAS,GAAT;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;aAC/B,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAVQ,YAAY;QADxB,iBAAU,EAAE;yCAGS,WAAI;OAFb,YAAY,CAWxB;IAAD,mBAAC;CAXD,AAWC,CAXiC,kCAAe,GAWhD;AAXY,oCAAY","file":"group.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Response} from \"@angular/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport {Group} from \"../models/models\";\nimport {AbstractService} from \"./abstract.service\";\n\n@Injectable()\nexport class GroupService extends AbstractService {\n\n    constructor(http: Http) {\n        super(http);\n    }\n\n    getGroups(): Observable<Group[]> {\n        return this.http.get('/groups.json')\n            .map((response: Response) => response.json())\n            .catch(this.handleError);\n    }\n}\n"]}