{"version":3,"sources":["shared/service/abstract.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyC;AACzC,sCAA6C;AAC7C,8CAA2C;AAG3C;IACI,yBAAsB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChC,CAAC;IAED;;OAEG;IACO,qCAAW,GAArB,UAAsB,GAAG;QACrB,IAAI,YAAoB,CAAC;QAEzB,IAAI,GAAG,YAAY,eAAQ,EAAE;YACzB,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,YAAY,GAAM,GAAG,CAAC,MAAM,YAAM,GAAG,CAAC,UAAU,IAAI,EAAE,UAAI,KAAO,CAAC;SACrE;aAAM;YACH,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;SAC7D;QAED,OAAO,uBAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAnBiB,eAAe;QADpC,iBAAU,EAAE;yCAEmB,WAAI;OADd,eAAe,CAoBpC;IAAD,sBAAC;CApBD,AAoBC,IAAA;AApBqB,0CAAe","file":"abstract.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Response, Http} from \"@angular/http\";\nimport {Observable} from \"rxjs/Observable\";\n\n@Injectable()\nexport abstract class AbstractService {\n    constructor(protected http: Http) {\n    }\n\n    /**\n     * Handle any errors from the API\n     */\n    protected handleError(err) {\n        let errorMessage: string;\n\n        if (err instanceof Response) {\n            let body = err.json() || '';\n            let error = body.error || JSON.stringify(body);\n            errorMessage = `${err.status} - ${err.statusText || ''} ${error}`;\n        } else {\n            errorMessage = err.message ? err.message : err.toString();\n        }\n\n        return Observable.throw(errorMessage);\n    }\n}\n"]}