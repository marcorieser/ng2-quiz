{"version":3,"sources":["question/question-detail.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA6E;AAC7E,kDAAyD;AAOzD,IAAa,uBAAuB;IAYhC;QAVA,qBAAgB,GAAG,IAAI,mBAAY,EAAE,CAAC;QAEtC,gBAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;QAKjC,kBAAa,GAAY,KAAK,CAAC;IAI/B,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAED,gDAAc,GAAd,UAAe,OAAgB;QAC3B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACrE,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YACtE,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED,gDAAc,GAAd,UAAe,MAAc;QACzB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACrE,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;YACtE,MAAM,CAAC;QACX,CAAC;QAED,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEL,8BAAC;AAAD,CA/CA,AA+CC,IAAA;AA7CG;IADC,aAAM,EAAE;;iEAC6B;AAEtC;IADC,aAAM,EAAE;;4DACwB;AAGjC;IADC,YAAK,EAAE;8BACE,iBAAQ;yDAAC;AAPV,uBAAuB;IALnC,gBAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,WAAW,EAAE,+CAA+C;QAC5D,SAAS,EAAE,CAAC,8CAA8C,CAAC;KAC9D,CAAC;;GACW,uBAAuB,CA+CnC;AA/CY,0DAAuB","file":"question-detail.component.js","sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {Question, Answer} from \"../shared/models/models\";\n\n@Component({\n    selector: 'question-detail',\n    templateUrl: './app/question/question-detail.component.html',\n    styleUrls: ['./app/question/question-detail.component.css']\n})\nexport class QuestionDetailComponent implements OnInit {\n    @Output()\n    questionAnswered = new EventEmitter();\n    @Output()\n    switchGroup = new EventEmitter();\n\n    @Input()\n    question: Question;\n\n    groupSwitched: boolean = false;\n    solutionVisible: boolean;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    evaluateOthers(correct: boolean) {\n        if (correct) {\n            this.questionAnswered.emit({question: this.question, correct: true});\n            return;\n        }\n        if (this.groupSwitched) {\n            this.questionAnswered.emit({question: this.question, correct: false});\n            return;\n        }\n        this.solutionVisible = false;\n        this.groupSwitched = true;\n        this.switchGroup.emit();\n    }\n\n    evaluateChoose(answer: Answer) {\n        if (answer.correct) {\n            this.questionAnswered.emit({question: this.question, correct: true});\n            return;\n        }\n        if (this.groupSwitched) {\n            this.questionAnswered.emit({question: this.question, correct: false});\n            return;\n        }\n\n        answer.choosen = true;\n        this.groupSwitched = true;\n        this.switchGroup.emit();\n    }\n\n}\n"]}