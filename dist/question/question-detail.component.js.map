{"version":3,"sources":["question/question-detail.component.ts"],"names":[],"mappings":"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","file":"question-detail.component.js","sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {Question, Answer} from \"../shared/models/models\";\nimport {SoundService} from \"../shared/service/sound.service\";\n\n@Component({\n    selector: 'question-detail',\n    templateUrl: './app/question/question-detail.component.html',\n    styleUrls: ['./app/question/question-detail.component.css']\n})\nexport class QuestionDetailComponent implements OnInit {\n    @Output()\n    questionAnswered = new EventEmitter();\n    @Output()\n    switchGroup = new EventEmitter();\n\n    @Input()\n    question: Question;\n\n    groupSwitched: boolean = false;\n    solutionVisible: boolean;\n    correctAnswer: string = '';\n\n    constructor(private soundService: SoundService) {\n    }\n\n    ngOnInit() {\n    }\n\n    evaluateOthers(correct: boolean) {\n        if (correct) {\n            this.questionAnswered.emit({question: this.question, correct: true, groupSwitched: this.groupSwitched});\n            this.soundService.playSound('correct');\n            return;\n        }\n        if (this.groupSwitched || this.question.jokerInUse) {\n            this.questionAnswered.emit({question: this.question, correct: false, groupSwitched: this.groupSwitched});\n            this.soundService.playSound('wrong');\n            return;\n        }\n        this.soundService.playSound('wrong');\n\n        this.solutionVisible = false;\n        this.groupSwitched = true;\n        this.switchGroup.emit();\n    }\n\n    evaluateChoose(answer: Answer) {\n        if (answer.correct) {\n            this.soundService.playSound('correct');\n\n            this.correctAnswer = answer.title;\n            this.solutionVisible = true;\n            setTimeout(() => {\n                this.questionAnswered.emit({question: this.question, correct: true, groupSwitched: this.groupSwitched});\n            }, 3000);\n            return;\n        }\n\n        answer.choosen = true;\n        this.soundService.playSound('wrong');\n\n        if (this.groupSwitched || this.question.jokerInUse) {\n            this.correctAnswer = this.getCorrectAnswer().title;\n            this.solutionVisible = true;\n            setTimeout(() => {\n                this.questionAnswered.emit({\n                    question: this.question,\n                    correct: false,\n                    groupSwitched: this.groupSwitched\n                });\n            }, 5000);\n            return;\n        }\n\n        this.groupSwitched = true;\n        this.switchGroup.emit();\n    }\n\n    getCorrectAnswer() {\n        for (let answer of this.question.answers) {\n            if (answer.correct) {\n                return answer;\n            }\n        }\n    }\n}"]}